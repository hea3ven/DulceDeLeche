plugins {
        id "net.minecraftforge.gradle.forge" version "2.0.1"
}

repositories {
    maven {
        url "https://raw.github.com/hea3ven/mvn-repo/master"
    }
    maven {
        name = "chickenbones"
        url = "http://chickenbones.net/maven/"
    }
}

version = "1.0.0"
group = "com.hea3ven.dulcedeleche"
archivesBaseName = "DulceDeLeche"

sourceCompatibility = 1.7
targetCompatibility = 1.7

minecraft {
    version = "1.8-11.14.3.1513"
    runDir = "run"

    mappings = "snapshot_20141130"
}

configurations {
    release
    runmods
}

dependencies {
    runmods "codechicken:CodeChickenCore:1.8-1.0.5.34:dev"
    runmods "codechicken:NotEnoughItems:1.8-1.0.5.82:dev"

    compile 'com.hea3ven.tools.commonutils:h3nt-commonutils:1.0.0'
    release('com.hea3ven.tools.commonutils:h3nt-commonutils:1.0.0') {
        transitive = false
    }

    testCompile "junit:junit:4.12"
}

sourceSets.main {
    java {
        srcDirs 'src/main/java'
        srcDirs 'src/bootstrap/java'
    }
    resources {
        srcDirs 'src/main/resources'
    }
}


processResources
{
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version
    inputs.property "forgeversion", project.minecraft.forgeVersion

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version, 'forgeversion':project.minecraft.forgeVersion
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    into ('libs') {
        from configurations.release
    }
}

task copyRunMods(type: Copy) {
    from configurations.runmods.files
    into minecraft.runDir + "/mods/"
}
setupDecompWorkspace.dependsOn(copyRunMods)

